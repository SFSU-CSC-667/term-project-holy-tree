
<div class='game-board mdl-color--blue-grey-50'>
  <div class='time-info'><span id='counter'>Game Starting Soon</span></div>
  <div class='players'>
    {{#each users }}
      {{> player_card this }}
    {{/each}}
  </div>
</div>

<div class='player-console'>
    <div class="game-chat">
      <ul id="messages"></ul>
      <form>
          <input type="text" id="message-input">
          <button type="submit">Send</button>
      </form>
    </div>

    <div class="game-info">
      <div class="player-game-info">
      </div>
    </div>
</div>


<script type="text/javascript">
  let socket = io.connect();
  let user_id = '{{ user_id }}';
  let name = '{{ name }}';
  let game_id = '{{ game_id }}';
  let role_info = {};

  const registerPlayerClickListener = function () {
    $('.player-card').on('click', function () {
      if ( role_info.action && $(this).data('id') != user_id ) {
        $('.player-card').removeClass('selected');
        $(this).addClass('selected');
        socket.emit('night action', { id: user_id, role: role_info.title, target: $(this).data('id'), game_id: game_id } );
      }
    });
  }

  const displayCountdown = function( duration ) {
    let counter = duration;
    let interval = setInterval( function() {
      counter--;
      let minutes = Math.floor( counter / 60 );
      let seconds = ( counter % 60 < 10 ) ? '0' + counter % 60 : counter % 60;
      $('#counter').text(`${minutes}:${seconds}`);
      if ( counter == 0 ) { clearInterval(interval); }
    }, 1000);
  };
  const registerNightPhaseTimeout = function( duration ) {
    let timeout = setTimeout( function() {
      $('#messages').append($('<li>').html('<strong>GAME:</strong> Night Phase is over! You are now in the Day Phase'));
      clearTimeout( timeout );
    }, duration * 1000 );
  }
  const registerDayPhaseTimeout = function( duration ) {
    let timeout = setTimeout( function() {

      $('#messages').append($('<li>').html('<strong>GAME:</strong> Day Phase is over! Start voting'));
      $('.game-board').css('background', 'url(/images/vote.png) no-repeat');
      clearTimeout( timeout );
    }, duration * 1000 );
  }

  const registerVotingPhaseTimeout = function ( duration ) {
    let timeout = setTimeout( function() {
      $('#messages').append($('<li>').html('<strong>GAME:</strong> Voting Phase is over! Time to look at the results'));
      clearTimeout( timeout );
    }, duration * 1000 );
  }
  socket.emit( 'subscribe to game', { game_id: game_id, user_id: user_id  } );
  /* CHAT Handlers */
  $('form').submit( function(){
    socket.emit('chat message', { message: $('#message-input').val(), name: name, game_id: game_id });
    $('#message-input').val('');
    return false;
  });
  socket.on('chat message', function( msg ) {
    $('#messages').append($('<li>').html(`<strong>${msg['name']}:</strong> ${msg['message']}`));
  });
  /* PLAYER Handlers */
  socket.on('player joined', function( data ) {
    if (data.id != user_id) {
      $('.players').append(Handlebars.templates.player_card( data ));
    }
    $('#game-player-count').text(data.player_count);
    registerPlayerClickListener();
  });
  socket.on('night phase starting', function( data ) {
      console.log("NIGHT PHASE STARTING: ", data);
      $('.player-game-info').html('');
      $('.player-game-info').append(Handlebars.templates.player_game_info( data ));
      $('.game-board').css('background', 'url(/images/night.png) no-repeat');
      role_info = data;
      displayCountdown( data.duration );
      registerNightPhaseTimeout( data.duration );
  });
  socket.on('day phase starting', function( data ) {
      console.log("DAY PHASE STARTING: ", data);
      $('.player-card').removeClass('selected').prop('onclick',null);
      $('.player-game-info').html('');
      $('.player-game-info').append(Handlebars.templates.player_game_info( data ));
      $('.game-board').css('background', 'url(/images/day.png) no-repeat');
      role_info = data;
      displayCountdown( data.duration );
      registerDayPhaseTimeout( data.duration );
  });
  
  socket.on('voting phase starting', function( phase_data ) {
    console.log("VOTING PHASE STARTING: ", phase_data);
    $('.player-card').on('click', function () {
      $('.player-card').removeClass('selected');
      $(this).addClass('selected');
      socket.emit( 'player vote', { game: game_id, id: user_id, target: $(this).data('id')  } );
    });
    displayCountdown( phase_data.duration );
    registerVotingPhaseTimeout( phase_data.duration );
  });

  socket.on('voting phase ended', function ( results ) {
    console.log("VOTING PHASE ENDED: ", results);
    // display voting results to players
  });
</script>